@model RecipeApp.ViewModels.IngredientViewModel

@{
    ViewData["Title"] = "Create";
}



<h4>Add Ingredient</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            @Html.HiddenFor(model => model.NewIngredient.RecipeId)

            <div class="form-group">
                <label asp-for="NewIngredient.Name" class="control-label"></label>
                <input asp-for="NewIngredient.Name" class="form-control" />
                <span asp-validation-for="NewIngredient.Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewIngredient.Amount" class="control-label"></label>
                <input asp-for="NewIngredient.Amount" class="form-control" />
                <span asp-validation-for="NewIngredient.Amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="NewIngredient.Unit" class="control-label"></label>
                <select asp-for="NewIngredient.Unit" asp-items="Html.GetEnumSelectList<UnitOfMeasure>()" class="form-control"></select>
                <span asp-validation-for="NewIngredient.Unit" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

@Html.Partial("~/Views/Ingredients/_IngredientList.cshtml", Model.Ingredients)

<div>
    @Html.ActionLink("Back to recipe list","Index", "Recipes")
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
